<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <service verb="create" noun="MoquiTraining" type="entity-auto">
        <in-parameters><auto-parameters entity-name="moqui.training.MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
        </in-parameters>
        <out-parameters><parameter name="trainingId"/></out-parameters>
    </service>


<!--Inline Service-->
    <service verb="create" noun="MoquiTrainingInline">
        <in-parameters>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate">
            <time-range after="now" format="yyyy/mm/dd"/></parameter>
            <parameter name="trainingPrice"/>
            <parameter name="trainingDuration"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
        <actions>
            <service-call name="create#moqui.training.MoquiTraining" in-map="context"/>
        </actions>
    </service>

<!--Groovy Script-->
    <service verb="create" noun="MoquiTrainingGroovy" type="script"
             location="component://moqui-training/service/moqui/moqui-training/CreateTraining.groovy">
        <in-parameters>
            <auto-parameters entity-name="moqui.training.MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
    </service>

<!-- Find a training detail-->
    <service verb="find" noun="TrainingDetail">
        <in-parameters>
            <parameter name="trainingName"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingInfo" type="list"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.training.MoquiTraining" list="trainingInfo">
                <econdition field-name="trainingName"/>
                <select-field field-name="trainingName,trainingId,trainingDate"/>
            </entity-find>

        </actions>
    </service>

<!-- Create or Update-->


    <service verb="store" noun="StoreTraining">
        <in-parameters>
            <auto-parameters entity-name="moqui.training.MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
        </in-parameters>

        <out-parameters>
            <parameter name="trainingId"/>
            <parameter name="trainingName"/>
        </out-parameters>

        <actions>
            <entity-find entity-name="moqui.training.MoquiTraining" list="trainingInfo">
                <econdition field-name="trainingName" ignore-case="true"/>
            </entity-find>
            <if condition="trainingInfo">
                <then>
                    <set field="training" from="trainingInfo.first"></set>
                    <entity-set value-field="training" map="context"></entity-set>
                    <entity-update value-field="training"/>
                    <set field="trainingId" from="training.trainingId"></set>
                </then>
                <else>
                    <service-call name="create#moqui.training.MoquiTraining" in-map="context" out-map="conext"/>
                </else>
            </if>
        </actions>
    </service>

<!-- create a new product service -->
    <service verb="create" noun="ProductIdMantle">
        <in-parameters>

            <parameter name="productName"/>
            <parameter name="description"/>
            <parameter name="price" />
            <parameter name="priceUomId" default-value="USD"/>

        </in-parameters>

        <out-parameters>
            <parameter name="productId"/>
        </out-parameters>
        <actions>
            <service-call name="create#mantle.product.Product" in-map="context" out-map="context"/>
            <if condition = "price">
                <service-call name = "create#mantle.product.ProductPrice" in-map="context" out-map="context"/>
            </if>

        </actions>
    </service>

</services>


